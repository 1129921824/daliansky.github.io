<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>黑果小兵的部落阁</title>
    <link>http://blog.daliansky.net/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>一些平时学习笔记以及搜集到的好的文章</description>
    <pubDate>Mon, 13 Nov 2017 07:47:28 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>借助VoodooHDA自带的getdump找出有效节点和路径</title>
      <link>http://blog.daliansky.net/With-VoodooHDA-comes-getdump-find-valid-nodes-and-paths.html</link>
      <guid>http://blog.daliansky.net/With-VoodooHDA-comes-getdump-find-valid-nodes-and-paths.html</guid>
      <pubDate>Mon, 13 Nov 2017 02:35:55 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;借助VoodooHDA自带的getdump找出有效节点和路径&quot;&gt;&lt;a href=&quot;#借助VoodooHDA自带的getdump找出有效节点和路径&quot; class=&quot;headerlink&quot; title=&quot;借助VoodooHDA自带的getdump找出有效节点和路径&quot;&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="借助VoodooHDA自带的getdump找出有效节点和路径"><a href="#借助VoodooHDA自带的getdump找出有效节点和路径" class="headerlink" title="借助VoodooHDA自带的getdump找出有效节点和路径"></a>借助VoodooHDA自带的getdump找出有效节点和路径</h1><p>声卡驱动了,音量调节的图标也显示正常,就是不发声怎么办<br>如果您的声卡使用了AppleALC,也注入了正确的ID后不发声怎么办呢?这个问题就出现在有效节点和路径不正确上面.<br>所谓条条大路通罗马,我们总不能在同一棵树上吊死吧.现在可以请出<a href="https://github.com/daliansky/VoodooHDA-2.9.0-Clover-V10" target="_blank" rel="external">VoodooHDA</a>万能声卡驱动程序了,说它万能是不正确的,如果它万能了估计就没<code>AppleALC</code>啥事儿了吧.这里可以借助<code>VoodooHDA</code>自带的应用程序:<a href="https://github.com/daliansky/VoodooHDA-2.9.0-Clover-V10/raw/master/getdump" target="_blank" rel="external">getdump</a>,使用方法:打开终端,输入命令:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getdump &gt; ~/Desktop/voodoo_dump.txt</div></pre></td></tr></table></figure>
<p>用它可以生成一份<code>voodoo_dump.txt</code>的文件,里面会有两段以<code>DUMPING Playback/Record Paths</code>开头的文字描述,这里面即包括了有效节点,同时也包括了有效的路径<br><img src="http://ous2s14vo.bkt.clouddn.com/path1.png" alt="path1"><br><img src="http://ous2s14vo.bkt.clouddn.com/path2.png" alt="path2"><br>从上面的两张截图中,可以将有效的节点和路径整理出下面的表格:</p>
<table>
<thead>
<tr>
<th>有效节点</th>
<th>10进制</th>
<th>设备名称</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x14</td>
<td>20</td>
<td>Speaker out</td>
<td><strong>20-&gt;12-&gt;2</strong></td>
</tr>
<tr>
<td>0x21</td>
<td>33</td>
<td>HP out</td>
<td><strong>33-&gt;13-&gt;3</strong></td>
</tr>
<tr>
<td>0x19</td>
<td>25</td>
<td>Headset Mic in</td>
<td><strong>8-&gt;35-&gt;24</strong> <strong>8-&gt;35-&gt;29备用</strong></td>
</tr>
<tr>
<td>0x12</td>
<td>18</td>
<td>Internal Mic in</td>
<td><strong>9-&gt;34-&gt;18</strong> <strong>9-&gt;34-&gt;29备用</strong></td>
</tr>
</tbody>
</table>
<p>有了这个表格,再结合<code>configdata</code>,找出有效的ID,编译<code>AppleALC</code>,注入ID并使用声卡驱动.</p>
<h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>该种方法摘自<a href="https://blog.daliansky.net/Use-AppleALC-sound-card-to-drive-the-correct-posture-of-AppleHDA.html">使用AppleALC声卡仿冒驱动AppleHDA的正确姿势</a>的部分内容,之所以单独发布就是想让更多的人看到</p>
<h1 id="关于打赏"><a href="#关于打赏" class="headerlink" title="关于打赏"></a>关于打赏</h1><p>您的支持就是我更新的动力！<br>如果不希望看到博主停更的话，请点击下方的 <code>打赏</code> 支持一下，有钱的捧个钱场，没钱的捧个人场，谢谢大家！</p>
<h1 id="QQ群"><a href="#QQ群" class="headerlink" title="QQ群:"></a>QQ群:</h1><p>331686786 <a href="http://shang.qq.com/wpa/qunwpa?idkey=db511a29e856f37cbb871108ffa77a6e79dde47e491b8f2c8d8fe4d3c310de91" target="_blank" rel="external">一起黑苹果</a></p>
]]></content:encoded>
      
      <comments>http://blog.daliansky.net/With-VoodooHDA-comes-getdump-find-valid-nodes-and-paths.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>MacOS下使用dd命令制作Ubuntu安装USB盘</title>
      <link>http://blog.daliansky.net/MacOS-use-the-dd-command-to-make-Ubuntu-install-USB-disk.html</link>
      <guid>http://blog.daliansky.net/MacOS-use-the-dd-command-to-make-Ubuntu-install-USB-disk.html</guid>
      <pubDate>Fri, 10 Nov 2017 03:11:27 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;MacOS下使用DD命令制作Ubuntu-Linux启动USB盘&quot;&gt;&lt;a href=&quot;#MacOS下使用DD命令制作Ubuntu-Linux启动USB盘&quot; class=&quot;headerlink&quot; title=&quot;MacOS下使用DD命令制作Ubuntu Linux启动
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="MacOS下使用DD命令制作Ubuntu-Linux启动USB盘"><a href="#MacOS下使用DD命令制作Ubuntu-Linux启动USB盘" class="headerlink" title="MacOS下使用DD命令制作Ubuntu Linux启动USB盘:"></a>MacOS下使用DD命令制作Ubuntu Linux启动USB盘:</h1><ul>
<li>下载Ubuntu Linux镜像,可以选择国内开源镜像站点下载:<br><a href="http://mirrors.163.com/ubuntu-releases/" target="_blank" rel="external">网易</a> <a href="http://mirrors.sohu.com/ubuntu-releases/" target="_blank" rel="external">搜狐</a> <a href="https://mirrors.aliyun.com/ubuntu-releases/" target="_blank" rel="external">阿里云</a> <ul>
<li>如果你只是想通过Linux提取codec的话,可以随便下载个旧的版本即可,比如这个<a href="https://mirrors.aliyun.com/ubuntu-releases/14.04/ubuntu-14.04.5-desktop-amd64.iso" target="_blank" rel="external">ubuntu 14.04.5LTS</a>,如果想做为日后的生产力工具的话,我推荐你下载最新发布的<a href="https://mirrors.aliyun.com/ubuntu-releases/17.10/ubuntu-17.10-desktop-amd64.iso" target="_blank" rel="external">ubuntu 17.10</a></li>
</ul>
</li>
<li><p>制作Ubuntu Linux安装盘 </p>
<ul>
<li>Windows下请使用工具<code>UltraISO</code>,方法略</li>
<li><p>macOS下制作过程:</p>
<ul>
<li><p>插入U盘,确定设备名,方法为打开磁盘工具,选择U盘,可以看到U盘下面有两个分区:<code>disk4s1</code>和<code>disk4s2</code>,那么U盘的设备名就是:<code>disk4</code><img src="http://ous2s14vo.bkt.clouddn.com/diskutil_disk4.png" alt="diskutil_disk4"></p>
</li>
<li><p>当然最简单的方法还是直接使用命令查看:<code>diskutil list</code>,输出的信息为:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">/dev/disk4 (internal, physical):</div><div class="line">  <span class="comment">#:                  TYPE NAME      SIZE IDENTIFIER</span></div><div class="line">  0:     Apple_partition_scheme   *2.0 GB disk4</div><div class="line">  1:        Apple_partition_map    4.1 KB disk4s1</div><div class="line">  2:                  Apple_HFS    2.4 MB disk4s2</div></pre></td></tr></table></figure>
<p>这个<code>disk4</code>就是你要操作的设备名,后面我们会用到它</p>
</li>
<li><p>卸载U盘,准备写入镜像,输入命令:<br><code>diskutil umountDisk disk4</code> # 卸载U盘</p>
</li>
<li><p>使用<code>dd</code>命令将下载的Ubuntu Linux镜像恢复到U盘上,操作之前我有必要<strong>提醒各位小白,万一你不小心输入错了设备名,那么你连哭的机会都没有,因为dd是按扇区直接物理写入磁盘,别到时候找不到数据了再悔不当初没有认真看到这段文字</strong></p>
  <figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dd <span class="keyword">if</span>=/Users/sky/Downloads/ISO/ubuntu-17.10-desktop-amd64.iso of=/dev/disk4 bs=1m</div></pre></td></tr></table></figure>
<p>  命令输入完后,请仔细认真检查下,尤其是<code>of=/dev/disk4</code>这里,再三确认后回车执行,输入用户密码后请耐心等待6-7分钟,写盘速度取决于你的U盘,镜像恢复的过程中不会有任何的文字输出,U盘写入成功后会显示下面类似的输出信息:</p>
  <figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">~ % diskutil umountDisk disk4</div><div class="line">Unmount of all volumes on disk4 was successful</div><div class="line">~ % sudo dd <span class="keyword">if</span>=/Users/sky/Downloads/ISO/ubuntu-17.10-desktop-amd64.iso of=/dev/disk4 bs=1m</div><div class="line">Password:</div><div class="line">1431+1 records <span class="keyword">in</span></div><div class="line">1431+1 records out</div><div class="line">1501102080 bytes transferred <span class="keyword">in</span> 906.101477 secs (1656660 bytes/sec)</div></pre></td></tr></table></figure>
<p>  <em>我的U盘竟然写了906秒(15分钟),我先找个地方哭会儿去</em><br>  同时系统会弹出一个错误的窗口,显示类似的信息:<br>  <img src="http://ous2s14vo.bkt.clouddn.com/dd_error.png" alt="dd_error"></p>
<p>  那是因为Linux的分区格式是ext,在macOS系统下无法识别才会报错,但是其实一个支持UEFI引导的Ubuntu Linux 17.10启动U盘已经制作成功了.点击<code>Ignore</code>忽略或者<code>Eject</code>退出U盘</p>
</li>
<li>现在您可以使用这个新制作的Ubuntu Linux安装U盘引导Linux快乐地玩耍啦</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="收工喽"><a href="#收工喽" class="headerlink" title="收工喽"></a>收工喽</h2><h1 id="关于打赏"><a href="#关于打赏" class="headerlink" title="关于打赏"></a>关于打赏</h1><p>您的支持就是我更新的动力！<br>如果不希望看到博主停更的话，请点击下方的 <code>打赏</code> 支持一下，有钱的捧个钱场，没钱的捧个人场，谢谢大家！</p>
<h1 id="QQ群"><a href="#QQ群" class="headerlink" title="QQ群:"></a>QQ群:</h1><p>331686786 <a href="http://shang.qq.com/wpa/qunwpa?idkey=db511a29e856f37cbb871108ffa77a6e79dde47e491b8f2c8d8fe4d3c310de91" target="_blank" rel="external">一起黑苹果</a></p>
]]></content:encoded>
      
      <comments>http://blog.daliansky.net/MacOS-use-the-dd-command-to-make-Ubuntu-install-USB-disk.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用HIDPI解决睡眠唤醒黑屏、花屏及连接外部显示器的正确姿势</title>
      <link>http://blog.daliansky.net/Use-HIDPI-to-solve-sleep-wake-up-black-screen,-Huaping-and-connect-the-external-monitor-the-correct-posture.html</link>
      <guid>http://blog.daliansky.net/Use-HIDPI-to-solve-sleep-wake-up-black-screen,-Huaping-and-connect-the-external-monitor-the-correct-posture.html</guid>
      <pubDate>Thu, 09 Nov 2017 11:50:39 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;经常会有网友反馈说自己的显示器黑屏或者花屏,早期的方式是&lt;a href=&quot;https://blog.dalians
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>经常会有网友反馈说自己的显示器黑屏或者花屏,早期的方式是<a href="https://blog.daliansky.net/Mac-frequently-used-to-the-command---continuous-update.html">注入EDID</a>可有效解决类似问题.经常摸索后发现打开显示器的HIDPI高分辨率支持的同时可有效去掉这种现象,同时这种操作也会减少或者消除出现8个苹果的概率</p>
</blockquote>
<h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><h1 id="提取EDID"><a href="#提取EDID" class="headerlink" title="提取EDID"></a>提取EDID</h1><p>使用工具<a href="https://bitbucket.org/blackosx/darwindumper" target="_blank" rel="external">DarwinDumper</a><br>操作步骤：</p>
<ol>
<li>打开 <code>DarwinDumper</code>，点击<code>Choose</code>，选择保存位置。可以将生成的文件保存到桌面</li>
<li>点击<code>Deselect All Dumps</code>,取消所有的选择项</li>
<li>勾选右侧的<code>EDID</code></li>
<li>点击<code>Run</code>按钮,生成<code>EDID.BIN</code>,保存于桌面生成的新目录中<br><img src="http://ous2s14vo.bkt.clouddn.com/DarwinDumper.jpg" alt="DarwinDumper"><br>生成的HTML报告如下:<br><img src="http://ous2s14vo.bkt.clouddn.com/DarwinDumperReport.png" alt="DarwinDumperReport"><br><strong><em>如果选择<code>Select All Dumps</code>再按<code>Run</code>它会生成一份完整的系统信息,类似于<code>WINDOWS</code>下面的<code>AIDA64</code>导出的详细信息</em></strong><br><img src="http://ous2s14vo.bkt.clouddn.com/DarwinDumperReportFull.png" alt="DarwinDumperReportFull"></li>
</ol>
<h1 id="修正EDID及打开HIDPI显示支持"><a href="#修正EDID及打开HIDPI显示支持" class="headerlink" title="修正EDID及打开HIDPI显示支持"></a>修正EDID及打开HIDPI显示支持</h1><h2 id="目的-通过此操作可有效解决开机内屏黑屏-花屏-显示器睡眠唤醒黑屏-花屏-可直接连接外部显示器"><a href="#目的-通过此操作可有效解决开机内屏黑屏-花屏-显示器睡眠唤醒黑屏-花屏-可直接连接外部显示器" class="headerlink" title="目的:通过此操作可有效解决开机内屏黑屏/花屏,显示器睡眠唤醒黑屏/花屏,可直接连接外部显示器"></a>目的:通过此操作可有效解决开机内屏黑屏/花屏,显示器睡眠唤醒黑屏/花屏,可直接连接外部显示器</h2><p><strong><em>备注:部分显卡需要修正显示器<a href="https://blog.daliansky.net/Intel-core-display-platformID-finishing.html">接口数据</a>,可通过Clover打补丁实现</em></strong></p>
<h2 id="使用工具-FixEDID"><a href="#使用工具-FixEDID" class="headerlink" title="使用工具:FixEDID"></a>使用工具:<a href="https://github.com/andyvand/FixEDID" target="_blank" rel="external">FixEDID</a></h2><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤:"></a>操作步骤:</h2><ol>
<li>打开<code>FixEDID</code>,点击<code>Open EDID binary file</code>,选择上面生成的<code>EDID.BIN</code>,这个文件位于<code>~/Desktop/DarwinDumperxxx</code></li>
<li>依次打开<code>EDID</code>,<code>EDID</code>的目录中存在三种格式的文件,<img src="http://ous2s14vo.bkt.clouddn.com/EDID.BIN.png" alt="EDID.BIN">请选择打开<code>EDID.bin</code><br><img src="http://ous2s14vo.bkt.clouddn.com/FixEDID.png" alt="FixEDID"></li>
<li>根据自己的显示器的分辨率选择16:9或者16:10,我的显示器是15.6寸,分辨率为1920x1080,长宽比为16:9,所以我需要将插图中的16:10通过下拉菜单选择调整为16:9,如下图<img src="http://ous2s14vo.bkt.clouddn.com/FixEDID2.png" alt="FixEDID2"><br>其中:前面的16:9是程序自动检测出的长宽比,后面的16:9通过下拉菜单选择,保持前后一致</li>
<li><p>添加HIDPI高分辨率:请根据个人喜好添加,我通常会添加的分辨率如下:</p>
<ul>
<li>3200x1800</li>
<li>2880x1620</li>
<li>1920x1080</li>
<li>1600x900</li>
<li>1440x810<br><img src="http://ous2s14vo.bkt.clouddn.com/FixEDID3.png" alt="FixEDID3"></li>
</ul>
</li>
<li><p>点击<code>Make</code>按钮,会自动在桌面生成一个新目录,比如我的目录为:<code>DisplayVendorID-dae</code></p>
</li>
<li>将该目录复制到显示器设备描述目录下,打开终端,输入命令:</li>
</ol>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp -R ~/Desktop/DisplayVendorID-dae /System/Library/Displays/Contents/Resources/Overrides</div></pre></td></tr></table></figure>
<h1 id="如何修改分辨率"><a href="#如何修改分辨率" class="headerlink" title="如何修改分辨率"></a>如何修改分辨率</h1><p>使用工具:<a href="https://github.com/avibrazil/RDM" target="_blank" rel="external">RDM</a><br><img src="http://ous2s14vo.bkt.clouddn.com/RDM.png" alt="RDM"><br>其中:分辨率后边带有闪电符号的即为HIDPI高分辨率</p>
<h2 id="收工"><a href="#收工" class="headerlink" title="收工"></a>收工</h2><h1 id="关于打赏"><a href="#关于打赏" class="headerlink" title="关于打赏"></a>关于打赏</h1><p>您的支持就是我更新的动力!<br>如果不希望看到博主停更的话，请点击下方的 <code>打赏</code> 支持一下，有钱的捧个钱场，没钱的捧个人场，谢谢大家！</p>
<h1 id="QQ群"><a href="#QQ群" class="headerlink" title="QQ群:"></a>QQ群:</h1><p>331686786 <a href="http://shang.qq.com/wpa/qunwpa?idkey=db511a29e856f37cbb871108ffa77a6e79dde47e491b8f2c8d8fe4d3c310de91" target="_blank" rel="external">一起黑苹果</a></p>
]]></content:encoded>
      
      <comments>http://blog.daliansky.net/Use-HIDPI-to-solve-sleep-wake-up-black-screen,-Huaping-and-connect-the-external-monitor-the-correct-posture.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用AppleALC声卡仿冒驱动AppleHDA的正确姿势</title>
      <link>http://blog.daliansky.net/Use-AppleALC-sound-card-to-drive-the-correct-posture-of-AppleHDA.html</link>
      <guid>http://blog.daliansky.net/Use-AppleALC-sound-card-to-drive-the-correct-posture-of-AppleHDA.html</guid>
      <pubDate>Thu, 09 Nov 2017 01:23:23 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;大纲-写作中&quot;&gt;&lt;a href=&quot;#大纲-写作中&quot; class=&quot;headerlink&quot; title=&quot;大纲,写作中&quot;&gt;&lt;/a&gt;大纲,写作中&lt;/h1&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="大纲-写作中"><a href="#大纲-写作中" class="headerlink" title="大纲,写作中"></a>大纲,写作中</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经常给网友仿冒声卡驱动, 一直都没有将过程写下来,鉴于每天会有许多人问如何仿冒声卡,就想将过程记录下来,供大家参考学习</p>
<h1 id="提取codec"><a href="#提取codec" class="headerlink" title="提取codec"></a>提取codec</h1><h2 id="通过linux提取codec"><a href="#通过linux提取codec" class="headerlink" title="通过linux提取codec"></a>通过linux提取codec</h2><h3 id="制作Ubuntu-Linux启动U盘"><a href="#制作Ubuntu-Linux启动U盘" class="headerlink" title="制作Ubuntu Linux启动U盘:"></a>制作Ubuntu Linux启动U盘:</h3><ul>
<li>下载Ubuntu Linux镜像,可以选择国内开源镜像站点下载:<br><a href="http://mirrors.163.com/ubuntu-releases/" target="_blank" rel="external">网易</a> <a href="http://mirrors.sohu.com/ubuntu-releases/" target="_blank" rel="external">搜狐</a> <a href="https://mirrors.aliyun.com/ubuntu-releases/" target="_blank" rel="external">阿里云</a> <ul>
<li>如果你只是想通过Linux提取codec的话,可以随便下载个旧的版本即可,比如这个<a href="https://mirrors.aliyun.com/ubuntu-releases/14.04/ubuntu-14.04.5-desktop-amd64.iso" target="_blank" rel="external">ubuntu 14.04.5LTS</a>,如果想作为日后的生产力工具的话,我推荐你下载最新发布的<a href="https://mirrors.aliyun.com/ubuntu-releases/17.10/ubuntu-17.10-desktop-amd64.iso" target="_blank" rel="external">ubuntu 17.10</a></li>
</ul>
</li>
<li><p>制作Ubuntu Linux安装盘 </p>
<ul>
<li>Windows下请使用工具<code>UltraISO</code>,方法略</li>
<li><p>macOS下制作过程:</p>
<ul>
<li><p>插入U盘,确定设备名,方法为打开磁盘工具,选择U盘,可以看到U盘下面有两个分区:<code>disk4s1</code>和<code>disk4s2</code>,那么U盘的设备名就是:<code>disk4</code><img src="http://ous2s14vo.bkt.clouddn.com/diskutil_disk4.png" alt="diskutil_disk4"></p>
</li>
<li><p>当然最简单的方法还是直接使用命令查看:<code>diskutil list</code>,输出的信息为:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">/dev/disk4 (internal, physical):</div><div class="line">  <span class="comment">#:                  TYPE NAME      SIZE IDENTIFIER</span></div><div class="line">  0:     Apple_partition_scheme   *2.0 GB disk4</div><div class="line">  1:        Apple_partition_map    4.1 KB disk4s1</div><div class="line">  2:                  Apple_HFS    2.4 MB disk4s2</div></pre></td></tr></table></figure>
<p>这个<code>disk4</code>就是你要操作的设备名,后面我们会用到它</p>
</li>
<li><p>卸载U盘,准备写入镜像,输入命令:<br><code>diskutil umountDisk disk4</code> # 卸载U盘</p>
</li>
<li><p>使用<code>dd</code>命令将下载的Ubuntu Linux镜像恢复到U盘上,操作之前我有必要<strong>提醒各位小白,万一你不小心输入错了设备名,那么你连哭的机会都没有,因为dd是按扇区直接物理写入磁盘,别到时候找不到数据了再悔不当初没有认真看到这段文字</strong></p>
  <figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dd <span class="keyword">if</span>=/Users/sky/Downloads/ISO/ubuntu-17.10-desktop-amd64.iso of=/dev/disk4 bs=1m</div></pre></td></tr></table></figure>
<p>  命令输入完后,请仔细认真检查下,尤其是<code>of=/dev/disk4</code>这里,再三确认后回车执行,输入用户密码后请耐心等待6-7分钟,写盘速度取决于你的U盘,镜像恢复的过程中不会有任何的文字输出,U盘写入成功后会显示下面类似的输出信息:</p>
  <figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">~ % diskutil umountDisk disk4</div><div class="line">Unmount of all volumes on disk4 was successful</div><div class="line">~ % sudo dd <span class="keyword">if</span>=/Users/sky/Downloads/ISO/ubuntu-17.10-desktop-amd64.iso of=/dev/disk4 bs=1m</div><div class="line">Password:</div><div class="line">1431+1 records <span class="keyword">in</span></div><div class="line">1431+1 records out</div><div class="line">1501102080 bytes transferred <span class="keyword">in</span> 906.101477 secs (1656660 bytes/sec)</div></pre></td></tr></table></figure>
<p>  <em>我的U盘竟然写了906秒(15分钟),我先找个地方哭会儿去</em><br>  同时系统会弹出一个警告窗口,显示类似的信息:<br>  <img src="http://ous2s14vo.bkt.clouddn.com/dd_error.png" alt="dd_error"></p>
<p>  那是因为Linux的分区格式是ext,在macOS系统下无法识别才会报错,但是其实一个支持UEFI引导的Ubuntu Linux 17.10启动U盘已经制作成功了.点击<code>Ignore</code>忽略或者<code>Eject</code>退出U盘</p>
</li>
<li><p>现在您可以使用这个新制作的Ubuntu Linux安装U盘引导Linux去提取codec</p>
<h2 id="提取codec-1"><a href="#提取codec-1" class="headerlink" title="提取codec"></a>提取codec</h2><p>开机按引导设备快捷键<code>F12</code>或者<code>F8</code>进入引导设备选单,选择<code>Ubuntu Linux</code>所在的USB盘回车<br><img src="http://ous2s14vo.bkt.clouddn.com/Boot_select.jpg" alt="Boot_select"><br>出现Ubuntu Linux的引导界面,选择<code>Try Ubuntu without installing</code>,该选项可以在不安装的情况下试用Ubuntu<br><img src="http://ous2s14vo.bkt.clouddn.com/Ubuntu_boot.jpg" alt="Ubuntu_boot"><br>回车后稍候会进入Ubuntu桌面:<br><img src="http://ous2s14vo.bkt.clouddn.com/ubuntu1.png" alt="ubuntu1"><br>按组合键<code>CTRL+ALT+t</code>打开终端,输入以下命令:</p>
  <figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> Desktop/ <span class="comment"># 进入用户桌面</span></div><div class="line">cp /proc/asound/card0/codec<span class="comment">#0 . # 将codec#0复制到当时位置</span></div><div class="line">sudo cp -R /sys/firmware/acpi/tables .  <span class="comment"># 将acpi/tables目录复制到当时位置,tables目录包括了全部的DSDT和SSDT</span></div><div class="line">ls -l   <span class="comment"># 列表</span></div><div class="line">sudo chown -R ubuntu:ubuntu *   <span class="comment"># 将当前目录下所有文件及目录所有人修改为ubuntu</span></div><div class="line">ls -l   <span class="comment"># 列表</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>显示输出信息如下:<br><img src="http://ous2s14vo.bkt.clouddn.com/ubuntu_codec_and_DSDT.png" alt="ubuntu_codec_and_DSDT"><br>将桌面上的codec#0和tables目录复制到LINUX以外的支持写入的盘符下,Linux下面的工作已经完成,您可以继续试用或者重启/关机.</p>
<h1 id="整理有效节点"><a href="#整理有效节点" class="headerlink" title="整理有效节点"></a>整理有效节点</h1><p>使用到的工具：<code>verbit.sh</code>,<a href="https://github.com/daliansky/dell7000/blob/master/hda-tools/verbit.sh" target="_blank" rel="external">下载链接</a><br>用法: <code>verbit.sh codec#0</code>,它会生成如下显示的信息:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">Verbs from Linux Codec Dump <span class="symbol">File:</span> codec<span class="comment">#0</span></div><div class="line"></div><div class="line"><span class="symbol">Codec:</span> Realtek ALC3246   <span class="symbol">Address:</span> <span class="number">0</span>   <span class="symbol">DevID:</span> <span class="number">283902550</span> (<span class="number">0x10ec0256</span>)</div><div class="line"></div><div class="line">   Jack   Color  Description                  Node     PinDefault             Original Verbs</div><div class="line">--------------------------------------------------------------------------------------------------------</div><div class="line">Digital Unknown  Mic at Int N/A              <span class="number">18</span> <span class="number">0x12</span>   <span class="number">0x90a60170</span>   <span class="number">01271</span>c7<span class="number">0</span> <span class="number">01271</span>d01 <span class="number">01271</span>ea6 <span class="number">01271</span>f9<span class="number">0</span></div><div class="line">Unknown Unknown  Line Out at Ext N/A         <span class="number">19</span> <span class="number">0x13</span>   <span class="number">0x40000000</span>   <span class="number">01371</span>c0<span class="number">0</span> <span class="number">01371</span>d0<span class="number">0</span> <span class="number">01371</span>e0<span class="number">0</span> <span class="number">01371</span>f4<span class="number">0</span></div><div class="line"> Analog Unknown  Speaker at Int N/A          <span class="number">20</span> <span class="number">0x14</span>   <span class="number">0x90170140</span>   <span class="number">01471</span>c4<span class="number">0</span> <span class="number">01471</span>d01 <span class="number">01471</span>e17 <span class="number">01471</span>f9<span class="number">0</span></div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear         <span class="number">24</span> <span class="number">0x18</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>871cf<span class="number">0</span> <span class="number">01</span>871d11 <span class="number">01</span>871e11 <span class="number">01</span>871f41</div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear         <span class="number">25</span> <span class="number">0x19</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>971c1<span class="number">0</span> <span class="number">01</span>971d2<span class="number">0</span> <span class="number">01</span>971e81 <span class="number">01</span>971f02</div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear         <span class="number">26</span> <span class="number">0x1a</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>a71cf<span class="number">0</span> <span class="number">01</span>a71d11 <span class="number">01</span>a71e11 <span class="number">01</span>a71f41</div><div class="line"> 	<span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear     	 <span class="number">27</span> <span class="number">0x1b</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>b71cf<span class="number">0</span> <span class="number">01</span>b71d11 <span class="number">01</span>b71e11 <span class="number">01</span>b71f41  </div><div class="line"> Analog    Pink  Modem Hand at Ext N/A       <span class="number">29</span> <span class="number">0x1d</span>   <span class="number">0x40779a2d</span>   <span class="number">01</span>d71c2d <span class="number">01</span>d71d9a <span class="number">01</span>d71e77 <span class="number">01</span>d71f4<span class="number">0</span></div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear         <span class="number">30</span> <span class="number">0x1e</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>e71cf<span class="number">0</span> <span class="number">01</span>e71d11 <span class="number">01</span>e71e11 <span class="number">01</span>e71f41</div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  HP Out at Ext Front         <span class="number">33</span> <span class="number">0x21</span>   <span class="number">0x02211030</span>   <span class="number">02171</span>c3<span class="number">0</span> <span class="number">02171</span>d1<span class="number">0</span> <span class="number">02171</span>e21 <span class="number">02171</span>f02</div><div class="line">--------------------------------------------------------------------------------------------------------</div><div class="line"></div><div class="line"></div><div class="line">   Jack   Color  Description                  Node     PinDefault             Modified Verbs</div><div class="line">--------------------------------------------------------------------------------------------------------</div><div class="line">Digital Unknown  Mic at Int N/A              <span class="number">18</span> <span class="number">0x12</span>   <span class="number">0x90a60170</span>   <span class="number">01271</span>c7<span class="number">0</span> <span class="number">01271</span>d0<span class="number">0</span> <span class="number">01271</span>ea6 <span class="number">01271</span>f9<span class="number">0</span></div><div class="line">Unknown Unknown  Line Out at Ext N/A         <span class="number">19</span> <span class="number">0x13</span>   <span class="number">0x40000000</span>   <span class="number">01371</span>c0<span class="number">0</span> <span class="number">01371</span>d0<span class="number">0</span> <span class="number">01371</span>e0<span class="number">0</span> <span class="number">01371</span>f4<span class="number">0</span></div><div class="line"> Analog Unknown  Speaker at Int N/A          <span class="number">20</span> <span class="number">0x14</span>   <span class="number">0x90170120</span>   <span class="number">01471</span>c2<span class="number">0</span> <span class="number">01471</span>d0<span class="number">0</span> <span class="number">01471</span>e17 <span class="number">01471</span>f9<span class="number">0</span></div><div class="line"> Analog    Pink  Modem Hand at Ext N/A       <span class="number">29</span> <span class="number">0x1d</span>   <span class="number">0x40779a2d</span>   <span class="number">01</span>d71c4<span class="number">0</span> <span class="number">01</span>d71d9<span class="number">0</span> <span class="number">01</span>d71e77 <span class="number">01</span>d71f4<span class="number">0</span></div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  HP Out at Ext Front         <span class="number">33</span> <span class="number">0x21</span>   <span class="number">0x02211030</span>   <span class="number">02171</span>c3<span class="number">0</span> <span class="number">02171</span>d1<span class="number">0</span> <span class="number">02171</span>e21 <span class="number">02171</span>f01</div><div class="line">--------------------------------------------------------------------------------------------------------</div><div class="line"></div><div class="line">Modified Verbs <span class="keyword">in</span> One <span class="symbol">Line:</span> <span class="number">01271</span>c7<span class="number">0</span> <span class="number">01271</span>d0<span class="number">0</span> <span class="number">01271</span>ea6 <span class="number">01271</span>f9<span class="number">0</span> <span class="number">01371</span>c0<span class="number">0</span> <span class="number">01371</span>d0<span class="number">0</span> <span class="number">01371</span>e0<span class="number">0</span> <span class="number">01371</span>f4<span class="number">0</span> <span class="number">01471</span>c2<span class="number">0</span> <span class="number">01471</span>d0<span class="number">0</span> <span class="number">01471</span>e17 <span class="number">01471</span>f9<span class="number">0</span> <span class="number">01</span>d71c4<span class="number">0</span> <span class="number">01</span>d71d9<span class="number">0</span> <span class="number">01</span>d71e77 <span class="number">01</span>d71f4<span class="number">0</span> <span class="number">02171</span>c3<span class="number">0</span> <span class="number">02171</span>d1<span class="number">0</span> <span class="number">02171</span>e21 <span class="number">02171</span>f01</div><div class="line">--------------------------------------------------------------------------------------------------------</div></pre></td></tr></table></figure>
<p>如果你希望将输出结果保存下来,可以将命令改为:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">verbit.sh codec<span class="comment">#0 &gt; ALC256_dump.txt</span></div></pre></td></tr></table></figure>
<p>这个ALC256_dump.txt就是上面显示的输出信息,你可以使用其它的文字编辑器打开它.<br>重要的信息不能漏掉了,后面我们在编译声卡驱动的时候会经常用到它们:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Codec: Realtek ALC3246   Address: 0   DevID: 283902550 (0x10ec0256)</div></pre></td></tr></table></figure>
<p>其中的:</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>Codec: Realtek ALC3246</td>
<td>是告诉了你的声卡型号是ALC3246(ALC256)</td>
</tr>
<tr>
<td>Address: 0</td>
<td>会告诉你生成configdata的数据的前缀是0,比如上面显示输出信息最后一行的<code>Modified Verbs in One Line:</code>后面所有的数据中,每组数据的第一位就是这个 <code>0</code> ,如果<code>Address: 2</code>,那么每组数据的第一位就是 <code>2</code> ,这个后面我们会用到它</td>
</tr>
<tr>
<td>DevID: 283902550 (0x10ec0256)</td>
<td>283902550是0x10ec0256的10进制值,0x10ec 是指vendorID(芯片供应商ID),是REALTEK的设备标识,0256是指型号,去掉前面的0,您的声卡型号就是:ALC256</td>
</tr>
</tbody>
</table>
<p>过去的教程会告诉你,通过运行<code>verbit.sh</code>整理出来的节点是:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">18 0x12 Mic at Int</div><div class="line">20 0x14 Speaker at Int</div><div class="line">33 0x21 HP Out at Ext Front</div></pre></td></tr></table></figure>
<p>至于上面输出信息里显示的0x13 0x1d都是无效的节点.而且它只有三个有效的节点,我的声卡ALC256是用于笔记本,按理说它至少还应该存在另一个Mic Ext的节点,我需要找出它来.看来使用传统的方法已经无法满足我的求知欲了.<br>既然使用Linux可以提取codec,那么有没有可能 </p>
<h1 id="通过Linux找出有效的节点"><a href="#通过Linux找出有效的节点" class="headerlink" title="通过Linux找出有效的节点"></a><em>通过Linux找出有效的节点</em></h1><p>呢?<br>为了测试我的声卡存在第四个节点,我需要找出耳机的Mic输入节点,于是乎重新引导进入Linux,插上耳机,它弹出了这个窗口:<br><img src="http://ous2s14vo.bkt.clouddn.com/SelectAudioDevice.png" alt="SelectAudioDevice"><br>这三个选项的意思是让我选择声音设备,既然我希望找出耳机麦克风的输入,我就选择了中间带有耳麦的图标<br>进入<code>Sound Settings</code>,点击 <code>Input</code>,选择<code>Headset Microphone</code>,调节<code>Input volume</code>,对着耳麦说话,发现有输入电平了,再切换到内置麦克风<code>Internal Microphone</code>,也有输入电平,那么至少说明我的声卡功能是完整的,至少在Linux下它工作的很好.<br><img src="http://ous2s14vo.bkt.clouddn.com/SoundInputDeviceSelect.png" alt="SoundInputDeviceSelect"><br>测试结果已经出来了,我想要知道耳麦的有效节点是什么,使用组合键<code>CTRL+ALT+t</code>打开终端,输入命令:<code>dmesg</code>看看它会有什么变化,结果我就看到了下面的文字:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[    5.040591] snd_hda_codec_realtek hdaudioC0D0: autoconfig <span class="keyword">for</span> ALC3246: line_outs=1 (0x14/0x0/0x0/0x0/0x0) <span class="built_in">type</span>:speaker</div><div class="line">[    5.040593] snd_hda_codec_realtek hdaudioC0D0:    speaker_outs=0 (0x0/0x0/0x0/0x0/0x0)</div><div class="line">[    5.040595] snd_hda_codec_realtek hdaudioC0D0:    hp_outs=1 (0x21/0x0/0x0/0x0/0x0)</div><div class="line">[    5.040595] snd_hda_codec_realtek hdaudioC0D0:    mono: mono_out=0x0</div><div class="line">[    5.040596] snd_hda_codec_realtek hdaudioC0D0:    inputs:</div><div class="line">[    5.040598] snd_hda_codec_realtek hdaudioC0D0:      Headset Mic=0x19</div><div class="line">[    5.040599] snd_hda_codec_realtek hdaudioC0D0:      Headphone Mic=0x1a</div><div class="line">[    5.040600] snd_hda_codec_realtek hdaudioC0D0:      Internal Mic=0x12</div></pre></td></tr></table></figure>
<p>我不想看到其它的输出信息,我只需要得到我想要的信息,于是将命令改为:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">sky@sky-Inspiron-7560:~$ dmesg | grep snd_hda_codec_realtek</div><div class="line">[    5.040591] snd_hda_codec_realtek hdaudioC0D0: autoconfig <span class="keyword">for</span> ALC3246: line_outs=1 (0x14/0x0/0x0/0x0/0x0) <span class="built_in">type</span>:speaker</div><div class="line">[    5.040593] snd_hda_codec_realtek hdaudioC0D0:    speaker_outs=0 (0x0/0x0/0x0/0x0/0x0)</div><div class="line">[    5.040595] snd_hda_codec_realtek hdaudioC0D0:    hp_outs=1 (0x21/0x0/0x0/0x0/0x0)</div><div class="line">[    5.040595] snd_hda_codec_realtek hdaudioC0D0:    mono: mono_out=0x0</div><div class="line">[    5.040596] snd_hda_codec_realtek hdaudioC0D0:    inputs:</div><div class="line">[    5.040598] snd_hda_codec_realtek hdaudioC0D0:      Headset Mic=0x19</div><div class="line">[    5.040599] snd_hda_codec_realtek hdaudioC0D0:      Headphone Mic=0x1a</div><div class="line">[    5.040600] snd_hda_codec_realtek hdaudioC0D0:      Internal Mic=0x12</div></pre></td></tr></table></figure>
<p>得到的输出结果跟上面的相同,于是我发现了在Linux下我的声卡的有效节点分别为:</p>
<ul>
<li>0x14 Speaker out</li>
<li>0x21 HP out </li>
<li>0x19 Headset Mic in</li>
<li>0x1a Headphone Mic in</li>
<li>0x12 Internal Mic in</li>
</ul>
<p>暂且不讨论我的声卡是几节点,我发现通过linux完全可以得出声卡的有效节点,而且这种方式好像也不需要使用什么专用的工具,只是在linux下面通过内部命令<code>dmesg</code>无意中就被我发现了声卡中最挠头的找有效节点的打怪秘籍,这种方法在整个Hackintosh社区里还没见有人用过.看来这跟我之前使用linux经常会通过<code>dmesg</code>排错的使用习惯是分不开的,这里要由衷地给自己点一个大大的</p>
<h1 id="赞"><a href="#赞" class="headerlink" title="赞"></a>赞</h1><p>在这个特别的日子里<code>11.11</code>,没有陪女朋友的小伙伴们,都可以使用我刚get到的新技能愉快地打怪升级啦!</p>
<p>暂更于此,做个记号 2017年11月11日</p>
<hr>
<p>继续更新</p>
<p>先将节点整理成一个表格,这个表格里会包括之前整理出的数据</p>
<table>
<thead>
<tr>
<th>有效节点</th>
<th>10进制</th>
<th>设备名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x14</td>
<td>20</td>
<td>Speaker out</td>
</tr>
<tr>
<td>0x21</td>
<td>21</td>
<td>HP out </td>
</tr>
<tr>
<td>0x19</td>
<td>25</td>
<td>Headset Mic in</td>
</tr>
<tr>
<td>0x1a</td>
<td>26</td>
<td>Headphone Mic in</td>
</tr>
<tr>
<td>0x12</td>
<td>18</td>
<td>Internal Mic in</td>
</tr>
</tbody>
</table>
<p>之所以加上转换后的10进制,就是为了以后制作pathmap做准备</p>
<h1 id="整理有效路径"><a href="#整理有效路径" class="headerlink" title="整理有效路径"></a>整理有效路径</h1><p>使用codecgraph生成pathmap图<br>命令如下:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ codecgraph codec\<span class="comment">#0</span></div><div class="line">Codec: Realtek ALC3246</div><div class="line">Generating codec<span class="comment">#0.svg</span></div></pre></td></tr></table></figure>
<p>如果出现<code>error: dot executable not found (did you install graphviz?)</code>的错误提示的话,那么还需要执行下面的动作,打开终端,输入命令:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span> <span class="comment"># 安装brew</span></div></pre></td></tr></table></figure>
<p>安装<code>brew</code>的过程中会提醒你安装<code>Xcode Command Tools</code>,请选择<code>yes</code>.<br>安装完<code>brew</code>之后,继续执行:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install graphviz   <span class="comment"># 安装codecgraph所需要的依赖程序</span></div></pre></td></tr></table></figure>
<p>这个生成的codec#0.svg就是声卡的pathmap,使用<code>Sketch.app</code>打开它<br><img src="http://ous2s14vo.bkt.clouddn.com/codec.png" alt="codec"><br>是不是看了头老大?没错,我刚开始看的时候也是一头的雾水,看多了后就会总结出经验来<br>还记得我们在前面整理出的有效节点吧?!<br>还是以我的声卡为例,上文中我已经整理出5个节点,按照顺序来:<br>    0x14,这个是Speaker的节点,也就是喇叭,我们也俗称为外放,如果想让它正确地发声,就需要看看跟它连接的节点都有哪些,在图片里找到0x14位于图片的最下方,我把它放大下:<br>    <img src="http://ous2s14vo.bkt.clouddn.com/node_output.png" alt="node_output"><br>通过观察我们会发现,0x14与0x02连接,转换成10进制就是20-&gt;2,同样的,0x21与0x03连接,转换成10进制就是33-&gt;3,我们把它放到表格中</p>
<table>
<thead>
<tr>
<th>有效节点</th>
<th>10进制</th>
<th>设备名称</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x14</td>
<td>20</td>
<td>Speaker out</td>
<td><strong>20-&gt;2</strong></td>
</tr>
<tr>
<td>0x21</td>
<td>33</td>
<td>HP out</td>
<td><strong>33-&gt;3</strong></td>
</tr>
<tr>
<td>0x19</td>
<td>25</td>
<td>Headset Mic in</td>
</tr>
<tr>
<td>0x1a</td>
<td>26</td>
<td>Headphone Mic in</td>
</tr>
<tr>
<td>0x12</td>
<td>18</td>
<td>Internal Mic in</td>
</tr>
</tbody>
</table>
<p>怎么样?也没想像的那么复杂吧?两个输出设备的节点和路径已经整理出来,下一步,我们要把输入设备和节点整理出来<br><img src="http://ous2s14vo.bkt.clouddn.com/node_input.png" alt="node_input"><br>再来看图片的上半部,最右侧的0x08和0x09是两个声音输入的节点,0x23和0x22是两个混音设备,最前方是设备节点,这个就是输入设备的路径.<br>我的声卡的0x12声音输入路径包括了3个节点;为了便于理解,被我圈起来的红线部分就是0x12(Mic in)的路径(pathmap),8-&gt;35-&gt;18就是路径,照样还是要将数据放到表格里<br><img src="http://ous2s14vo.bkt.clouddn.com/node12_pathmap.png" alt="node12_pathmap"></p>
<table>
<thead>
<tr>
<th>有效节点</th>
<th>10进制</th>
<th>设备名称</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x14</td>
<td>20</td>
<td>Speaker out</td>
<td><strong>20-&gt;2</strong></td>
</tr>
<tr>
<td>0x21</td>
<td>33</td>
<td>HP out</td>
<td><strong>33-&gt;3</strong></td>
</tr>
<tr>
<td>0x19</td>
<td>25</td>
<td>Headset Mic in</td>
<td></td>
</tr>
<tr>
<td>0x1a</td>
<td>26</td>
<td>Headphone Mic in</td>
<td></td>
</tr>
<tr>
<td>0x12</td>
<td>18</td>
<td>Internal Mic in</td>
<td><strong>8-&gt;35-&gt;18</strong></td>
</tr>
</tbody>
</table>
<p>还记得文章前面通过linux找出来的有效节点不?我的耳麦可是支持输入的,节点也找出来了,是0x19(Headset Mic in),我需要将路径找出来,我发现0x19同时连接了两个节点:0x23和0x22,相应地路径为:8-&gt;35-&gt;25和9-&gt;34-&gt;25,顺手也把0x1a的路径也整理出来备用,将这两组数据补充进表格里</p>
<table>
<thead>
<tr>
<th>有效节点</th>
<th>10进制</th>
<th>设备名称</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x14</td>
<td>20</td>
<td>Speaker out</td>
<td><strong>20-&gt;2</strong></td>
</tr>
<tr>
<td>0x21</td>
<td>33</td>
<td>HP out</td>
<td><strong>33-&gt;3</strong></td>
</tr>
<tr>
<td>0x19</td>
<td>25</td>
<td>Headset Mic in</td>
<td><strong>8-&gt;35-&gt;25</strong> <strong>9-&gt;34-&gt;25</strong></td>
</tr>
<tr>
<td>0x1a</td>
<td>26</td>
<td>Headphone Mic in</td>
<td><strong>8-&gt;35-&gt;26</strong> <strong>9-&gt;34-&gt;26</strong></td>
</tr>
<tr>
<td>0x12</td>
<td>18</td>
<td>Internal Mic in</td>
<td><strong>8-&gt;35-&gt;18</strong></td>
</tr>
</tbody>
</table>
<p>至于0x1a是否有效暂且放到一边,一个包括了有效节点/设备名称/路径的表格就整理完成了,这里<strong><em>需要强调的一点是:路径数值使用10进制</em></strong></p>
<h1 id="整理ConfigData"><a href="#整理ConfigData" class="headerlink" title="整理ConfigData"></a>整理ConfigData</h1><blockquote>
<p><code>ConfigData</code>的获得有两种方法:这两种方法分别为:通过<code>codec</code>里面的<code>Pin Default</code>提取以及通过<code>PinConfigs</code>提取,然后修正<code>ConfigData</code>.下面我们将分别介绍这两种提取方法</p>
</blockquote>
<h2 id="通过codec里面的Pin-Default提取并整理"><a href="#通过codec里面的Pin-Default提取并整理" class="headerlink" title="通过codec里面的Pin Default提取并整理"></a>通过<code>codec</code>里面的<code>Pin Default</code>提取并整理</h2><p>将使用<code>verbit.sh</code>整理出来的<code>ALC256_dump.txt</code>重新打开:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Verbs from Linux Codec Dump <span class="symbol">File:</span> codec<span class="comment">#0</span></div><div class="line"></div><div class="line"><span class="symbol">Codec:</span> Realtek ALC3246   <span class="symbol">Address:</span> <span class="number">0</span>   <span class="symbol">DevID:</span> <span class="number">283902550</span> (<span class="number">0x10ec0256</span>)</div><div class="line"></div><div class="line">   Jack   Color  Description                  Node     PinDefault             Original Verbs</div><div class="line">--------------------------------------------------------------------------------------------------------</div><div class="line">Digital Unknown  Mic at Int N/A              <span class="number">18</span> <span class="number">0x12</span>   <span class="number">0x90a60170</span>   <span class="number">01271</span>c7<span class="number">0</span> <span class="number">01271</span>d01 <span class="number">01271</span>ea6 <span class="number">01271</span>f9<span class="number">0</span></div><div class="line">Unknown Unknown  Line Out at Ext N/A         <span class="number">19</span> <span class="number">0x13</span>   <span class="number">0x40000000</span>   <span class="number">01371</span>c0<span class="number">0</span> <span class="number">01371</span>d0<span class="number">0</span> <span class="number">01371</span>e0<span class="number">0</span> <span class="number">01371</span>f4<span class="number">0</span></div><div class="line"> Analog Unknown  Speaker at Int N/A          <span class="number">20</span> <span class="number">0x14</span>   <span class="number">0x90170140</span>   <span class="number">01471</span>c4<span class="number">0</span> <span class="number">01471</span>d01 <span class="number">01471</span>e17 <span class="number">01471</span>f9<span class="number">0</span></div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear         <span class="number">24</span> <span class="number">0x18</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>871cf<span class="number">0</span> <span class="number">01</span>871d11 <span class="number">01</span>871e11 <span class="number">01</span>871f41</div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear         <span class="number">25</span> <span class="number">0x19</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>971c1<span class="number">0</span> <span class="number">01</span>971d2<span class="number">0</span> <span class="number">01</span>971e81 <span class="number">01</span>971f02</div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear         <span class="number">26</span> <span class="number">0x1a</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>a71cf<span class="number">0</span> <span class="number">01</span>a71d11 <span class="number">01</span>a71e11 <span class="number">01</span>a71f41</div><div class="line"> 	<span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear     	 <span class="number">27</span> <span class="number">0x1b</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>b71cf<span class="number">0</span> <span class="number">01</span>b71d11 <span class="number">01</span>b71e11 <span class="number">01</span>b71f41  </div><div class="line"> Analog    Pink  Modem Hand at Ext N/A       <span class="number">29</span> <span class="number">0x1d</span>   <span class="number">0x40779a2d</span>   <span class="number">01</span>d71c2d <span class="number">01</span>d71d9a <span class="number">01</span>d71e77 <span class="number">01</span>d71f4<span class="number">0</span></div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  Speaker at Ext Rear         <span class="number">30</span> <span class="number">0x1e</span>   <span class="number">0x411111f0</span>   <span class="number">01</span>e71cf<span class="number">0</span> <span class="number">01</span>e71d11 <span class="number">01</span>e71e11 <span class="number">01</span>e71f41</div><div class="line">    <span class="number">1</span>/<span class="number">8</span>   Black  HP Out at Ext Front         <span class="number">33</span> <span class="number">0x21</span>   <span class="number">0x02211030</span>   <span class="number">02171</span>c3<span class="number">0</span> <span class="number">02171</span>d1<span class="number">0</span> <span class="number">02171</span>e21 <span class="number">02171</span>f02</div><div class="line">--------------------------------------------------------------------------------------------------------</div></pre></td></tr></table></figure>
<p>将数据整理成如下的样式:</p>
<ul>
<li>[Fixed]是内部设备</li>
<li>[Jack]是通过插孔进行连接的外部设备</li>
<li>[N/A]是其它未知设备</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Node	PinDefault		Description </div><div class="line">----------------------------------------------------------</div><div class="line"><span class="number">0x12</span>	<span class="number">0x90a60170</span>		[Fixed]	Mic at Int       </div><div class="line"><span class="number">0x13</span>	<span class="number">0x40000000</span>		[N/A]	Line Out at Ext N/A  </div><div class="line"><span class="number">0x14</span>	<span class="number">0x90170140</span>		[Fixed]	Speaker at Int   </div><div class="line"><span class="number">0x18</span>	<span class="number">0x411111f0</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">0x19</span>	<span class="number">0x411111f0</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">0x1a</span>	<span class="number">0x411111f0</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">0x1b</span>	<span class="number">0x411111f0</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">0x1d</span>	<span class="number">0x40779a2d</span>		[N/A]	Modem Hand at Ext N/A</div><div class="line"><span class="number">0x1e</span>	<span class="number">0x411111f0</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">0x21</span>	<span class="number">0x02211030</span>		[Jack]	HP Out at Ext Front  </div><div class="line">----------------------------------------------------------</div></pre></td></tr></table></figure>
<p>将<code>PinDefault</code>进行小端转换<a href="https://zh.wikipedia.org/zh-hans/字节序" target="_blank" rel="external">little-endian</a>,这里借用一张紫米教程里面的图片进行小端转换的理解:<br><img src="http://ous2s14vo.bkt.clouddn.com/little-endian.jpg" alt="little-endian"><br>就是把<code>PinDefault</code>的数据两两对调,比如:<code>0x12</code>节点的<code>[Fixed]    Mic at Int</code>原始数据为:<code>0x90a60170</code>,去掉前面的<code>0x</code>,变成<code>90 a6 01 70</code>,<br>最前面的<code>90</code>跑到了最后,最后的<code>70</code>又跑到了最前面,中间的<code>a6</code>和<code>01</code>再对调下,就变成了<code>70 01 a6 90</code>.整理后,变成如下的格式:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Node    c  d  e  f      Description</div><div class="line"><span class="number">12</span>		<span class="number">70</span> <span class="number">01</span> a6 <span class="number">90</span>		[Fixed]	Mic at Int       </div><div class="line"><span class="number">13</span>		<span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">40</span>		[N/A]	Line Out at Ext N/A  </div><div class="line"><span class="number">14</span>		<span class="number">40</span> <span class="number">01</span> <span class="number">17</span> <span class="number">90</span>		[Fixed]	Speaker at Int   </div><div class="line"><span class="number">18</span>		f<span class="number">0</span> <span class="number">11</span> <span class="number">11</span> <span class="number">41</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">19</span>		f<span class="number">0</span> <span class="number">11</span> <span class="number">11</span> <span class="number">41</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">1</span>a		f<span class="number">0</span> <span class="number">11</span> <span class="number">11</span> <span class="number">41</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">1</span>b		f<span class="number">0</span> <span class="number">11</span> <span class="number">11</span> <span class="number">41</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">1</span>d		<span class="number">2</span>d <span class="number">9</span>a <span class="number">77</span> <span class="number">40</span>		[N/A]	Modem Hand at Ext N/A</div><div class="line"><span class="number">1</span>e		f<span class="number">0</span> <span class="number">11</span> <span class="number">11</span> <span class="number">41</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">21</span>		<span class="number">30</span> <span class="number">10</span> <span class="number">21</span> <span class="number">02</span>		[Jack]	HP Out at Ext Front</div></pre></td></tr></table></figure>
<p>下一步,我们要对数据进行修正,让它看起来更像<code>APPLE</code>.</p>
<h3 id="修正PinDefault-并生成ConfigData"><a href="#修正PinDefault-并生成ConfigData" class="headerlink" title="修正PinDefault,并生成ConfigData"></a>修正<code>PinDefault</code>,并生成<code>ConfigData</code></h3><p>上一节我们只是把数据进一步地整理出来,并进行了格式化,我们并没有对数据进行修正.本节我们就开始进行<code>PinDefault</code>的修正,先上一张我整理出来的表格:<br><img src="http://ous2s14vo.bkt.clouddn.com/pinconfigs.png" alt="pinconfigs"></p>
<ul>
<li>前面我提到过通过Linux找到的节点<code>0x19</code>,它在Linux下面显示的设备为<code>Headset Mic</code>,在上一节中我们整理出的<code>0x19</code>的设备为:<code>[N/A]    Speaker at Ext Rear</code> , <code>PinDefault</code>值为:<code>f0 11 11 41</code>,通过上表我们得知,这个端口是被屏蔽掉的,就是不起作用的节点.</li>
<li>现在我们希望它能正常工作,我的想法是把它修正为:<code>[Jack] Mic at Ext</code>,一个可以正常工作的外部麦克输入设备,结合上面的表格,我将<code>f0 11 11 41</code>修改为:<code>70 20 a1 02</code>.</li>
<li>由于我的耳机插孔只有一个,也就是俗称的二合一插孔,我希望在上面的外麦克工作不正常的情况下,可以将耳麦和耳机输出定义成组合插孔(2in1),上表中<code>Connection Type</code>的连接类型中,正好有个<code>B=Combination</code>,它的意思就是:<code>组合</code>,我需要同时修正耳麦和耳机的数值:<ul>
<li><code>Mic at Ext</code> : <code>f0 11 11 41</code>-&gt;<code>70 20 ab 02</code></li>
<li><code>HP Out Ext</code> : <code>30 10 21 02</code>-&gt;<code>30 10 2b 02</code></li>
</ul>
</li>
</ul>
<p>更新于:11-15-2017 16:41</p>
<p>继续更新<br><code>0x1d</code>的节点为无效节点,所以必须把它屏蔽起来,为了让它更符合<code>APPLE</code>的规范,我们使用<code>f0 00 00 40</code>来屏蔽,包括其它的不用的节点.修正后的数据为:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Node    c  d  e  f      Description</div><div class="line"><span class="number">12</span>		<span class="number">70</span> <span class="number">01</span> a6 <span class="number">90</span>		[Fixed]	Mic at Int       </div><div class="line"><span class="number">13</span>		f<span class="number">0</span> <span class="number">00</span> <span class="number">00</span> <span class="number">40</span>		[N/A]	Line Out at Ext N/A  </div><div class="line"><span class="number">14</span>		<span class="number">40</span> <span class="number">01</span> <span class="number">17</span> <span class="number">90</span>		[Fixed]	Speaker at Int   </div><div class="line"><span class="number">18</span>		f<span class="number">0</span> <span class="number">00</span> <span class="number">00</span> <span class="number">40</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">19</span>		<span class="number">70</span> <span class="number">10</span> ab <span class="number">02</span>		[Jack]	Mic at Ext  </div><div class="line"><span class="number">1</span>a		f<span class="number">0</span> <span class="number">00</span> <span class="number">00</span> <span class="number">40</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">1</span>b		f<span class="number">0</span> <span class="number">00</span> <span class="number">00</span> <span class="number">40</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">1</span>d		<span class="number">2</span>d <span class="number">9</span>a <span class="number">77</span> <span class="number">40</span>		[N/A]	Modem Hand at Ext N/A</div><div class="line"><span class="number">1</span>e		f<span class="number">0</span> <span class="number">00</span> <span class="number">00</span> <span class="number">40</span>		[N/A]	Speaker at Ext Rear  </div><div class="line"><span class="number">21</span>		<span class="number">30</span> <span class="number">10</span> <span class="number">2</span>b <span class="number">02</span>		[Jack]	HP Out at Ext Front</div></pre></td></tr></table></figure>
<p>现在, 我们可以生成最终的<code>ConfigData</code>了,<br><code>ConfigData</code>的计算公式为:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Final Config:</div><div class="line">Address + Node + 71c +【c】</div><div class="line">Address + Node + 71d +【d】</div><div class="line">Address + Node + 71e +【e】</div><div class="line">Address + Node + 71f +【f】</div></pre></td></tr></table></figure>
<p>这里的<code>c</code> <code>d</code> <code>e</code> <code>f</code>就是上面整理出来的2位数值<br>我的ALC256的<code>Address</code>值为0,现在我将节点<code>0x12</code>的<code>ConfigData</code>值通过上面的公式整理后得出:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">01271c70 01271d01 01271ea6 01271f90</div></pre></td></tr></table></figure>
<p>相应地,其它的节点整理出来的数据如下:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">01270c70 01270d01 01270ea6 01270f90</div><div class="line">01370cf0 01370d00 01370e00 01370f40</div><div class="line">01470c40 01470d01 01470e17 01470f90</div><div class="line">01870cf0 01870d00 01870e00 01870f40</div><div class="line">01970c70 01970d10 01970eab 01970f02</div><div class="line">01a70cf0 01a70d00 01a70e00 01a70f40</div><div class="line">01b70cf0 01b70d00 01b70e00 01b70f40</div><div class="line">01d70c2d 01d70d9a 01d70e77 01d70f40</div><div class="line">01e70cf0 01e70d00 01e70e00 01e70f40</div><div class="line">02170c30 02170d10 02170e2b 02170f02</div></pre></td></tr></table></figure>
<p>我将编辑的过程做了段视频,方便大家理解.</p>
<video width="640" height="480" controls><br><source src="http://ous2s14vo.bkt.clouddn.com/ConfigData.mp4"><br></video>

<p>打开<code>Sublime Text.app</code>,按住鼠标中键打开块复制,将<code>c</code> <code>d</code> <code>e</code> <code>f</code>下面的数据块拷贝一份到最下面空白处,在第一列按鼠标中键一下拉到下面,输入<code>Address</code>值<code>0</code>,再把上方的<code>Node</code>下面的数据做块复制,粘贴到0后面,再输入:<code>70c</code>,再将<code>01270</code>做块复制到后面,再分别输入<code>d</code> <code>e</code> <code>f</code>即可.</p>
<h2 id="通过PinConfigs提取ConfigData"><a href="#通过PinConfigs提取ConfigData" class="headerlink" title="通过PinConfigs提取ConfigData"></a>通过PinConfigs提取ConfigData</h2><p>ConfigData数据位于<code>PinConfigs.kext/Contents/Info.plist</code>里,<code>PinConfigs.kext</code>作为<code>AppleALC</code>插件被加载.<br>用到的工具:<code>Plist Editor Pro.app</code><br>还是以我的ALC256为例:打开<code>Info.plist</code>后,使用组合快捷键<code>⌘+f</code>打开搜索: <code>ALC256</code> 或者 <code>283902550</code> ,它会直接定位到你需要查找的数据位置,再按<code>⌘+g</code>,将相同的字符串全部搜索完毕,直到它又跳转到第一个搜索结果的位置,结果如下图:<br><img src="http://ous2s14vo.bkt.clouddn.com/PlistEditorPro.png" alt="PlistEditorPro"><br>ALC256的ConfigData的数据有三组,分别对应的LayoutID为:13 28 56<br>将这三组ConfigData复制出来:</p>
<p>id:13<br><code>01271C10 01271D00 01271EA6 01271F90 01471C20 01471D00 01471E17 01471F90 01971C30 01971D10 01971E8B 01971F02 02171C50 02171D10 02171E2B 02171F02 01470C02</code></p>
<p>id:28<br><code>01471C50 01471D00 01471E17 01471F90 01470C02 01A71C30 01A71D00 01A71EA0 01A71F90 02171C20 02171D10 02171E21 02171F00</code></p>
<p>id:56<br><code>01271C10 01271D00 01271EA6 01271F90 01471C20 01471D00 01471E17 01471F90 01971C30 01971D10 01971E8B 01971F02 01A71C40 01A71D10 01A71E81 01A71F02 01D71CF0 01D71D11 01D71E11 01D71F41 02171C50 02171D10 02171E2B 02171F02 01470C02 02170C02</code></p>
<p>这么看起来是杂乱无章的,我们将它格式化一下,每个节点一行,四组数据:<br>id:13 </p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">01271C10 01271D00 01271EA6 01271F90 </div><div class="line">01471C20 01471D00 01471E17 01471F90 </div><div class="line">01971C30 01971D10 01971E8B 01971F02 </div><div class="line">02171C50 02171D10 02171E2B 02171F02 01470C02</div></pre></td></tr></table></figure>
<p>id:28 </p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">01471C50 01471D00 01471E17 01471F90 01470C02 </div><div class="line">01A71C30 01A71D00 01A71EA0 01A71F90 </div><div class="line">02171C20 02171D10 02171E21 02171F00</div></pre></td></tr></table></figure>
<p>id:56 </p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">01271C10 01271D00 01271EA6 01271F90 </div><div class="line">01471C20 01471D00 01471E17 01471F90 01470C02 </div><div class="line">01971C30 01971D10 01971E8B 01971F02 </div><div class="line">01A71C40 01A71D10 01A71E81 01A71F02 </div><div class="line">01D71CF0 01D71D11 01D71E11 01D71F41 </div><div class="line">02171C50 02171D10 02171E2B 02171F02 02170C02</div></pre></td></tr></table></figure>
<p>从中我们可以发现:<br>id:13为四行四节点,节点为:<code>0x12 0x14 0x19 0x21</code><br>id:28为三行三节点,节点为:<code>0x14 0x1A 0x21</code><br>id:56为六行六节点,节点为:<code>0x12 0x14 0x19 0x1A 0x1D 0x21</code><br>现在有个问题摆在你们的面前,我上面明明刚说过每个节点为四组数据,那为什么在0x14和0x21的节点后面又多出来一组数据呢?这组数据又有什么作用呢?原来秘密都藏在<code>codec</code>里面,它定义了某些输出设备具有<code>EAPD</code>,比如0x14节点的数据:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Node <span class="number">0x14</span> [Pin Complex] wcaps <span class="number">0x40058d</span>: Stereo Amp-Out</div><div class="line">  <span class="symbol">Control:</span> name=<span class="string">"Speaker Playback Switch"</span>, index=<span class="number">0</span>, device=<span class="number">0</span></div><div class="line">    <span class="symbol">ControlAmp:</span> chs=<span class="number">3</span>, dir=Out, idx=<span class="number">0</span>, ofs=<span class="number">0</span></div><div class="line">  Amp-Out <span class="symbol">caps:</span> ofs=<span class="number">0x00</span>, nsteps=<span class="number">0x00</span>, stepsize=<span class="number">0x00</span>, mute=<span class="number">1</span></div><div class="line">  Amp-Out <span class="symbol">vals:</span>  [<span class="number">0x00</span> <span class="number">0x00</span>]</div><div class="line">  Pincap <span class="number">0x00010014</span>: OUT EAPD Detect</div><div class="line">  EAPD <span class="number">0x2</span>: EAPD</div><div class="line">  Pin Default <span class="number">0x90170120</span>: [Fixed] Speaker at Int N/A</div><div class="line">    Conn = Analog, Color = Unknown</div><div class="line">    DefAssociation = <span class="number">0x2</span>, Sequence = <span class="number">0x0</span></div><div class="line">    Misc = NO_PRESENCE</div><div class="line">  Pin-<span class="symbol">ctls:</span> <span class="number">0x40</span>: OUT</div><div class="line">  <span class="symbol">Unsolicited:</span> tag=<span class="number">00</span>, enabled=<span class="number">0</span></div><div class="line">  Power <span class="symbol">states:</span>  D<span class="number">0</span> D1 D2 D3 EPSS</div><div class="line">  <span class="symbol">Power:</span> setting=D<span class="number">0</span>, actual=D<span class="number">0</span></div><div class="line">  <span class="symbol">Connection:</span> <span class="number">1</span></div><div class="line">     <span class="number">0x02</span></div></pre></td></tr></table></figure>
<p>具有<code>EAPD</code>的节点需要添加参数<code>SET_EAPD_BTLENABLE</code>,转换成数值为<code>0x70C</code>,完整的数值为:<code>Address</code>+<code>节点</code>+<code>70C</code>+<code>02</code>,即:<code>01470C02</code>,它通过<code>hda-verb</code>可以执行,比如<code>CodecCommander</code>就是调用的<code>hda-verb</code>执行的命令.更多的<code>hda-verb</code>参数请参考我之前的文章:<a href="https://blog.daliansky.net/hda-verb-parameter-detail-table.html">hda-verb参数详表</a><br>这里我教大家一个简单判断<code>EAPD</code>节点的方法:那就是它通常会位于<code>Speaker Out</code>和<code>HP Out</code>这两个输出节点上.至于其它教程提到过的<strong>关于<code>01470C02</code>是组神奇的代码,可以让外放发声</strong>的说法是错误的,它可能刚好声卡的<code>Speaker Out</code>的输出节点是<code>0x14</code>而已.如果您的<code>Speaker Out</code>输出节点是<code>0x16</code>,那么就需要把它修改为<code>01670C02</code>,当然要遵守这个公式:<code>Address</code>+<code>节点</code>+<code>70C</code>+<code>02</code></p>
<p>本节教程先更新到这里 11-13-2017 10:25PM</p>
<p>续更</p>
<p>另外一种找出<code>EAPD</code>节点的方法:使用工具<code>node_dump.sh</code>,它会显示出每个节点的信息,包括<code>EAPD</code>输出,详细的用法以后再补充上.</p>
<p>说了半天,也只说了一个<code>01470C02</code>是干什么用的,其它的四组数据都分别代表什么呢?这个话题如果展开讲的话,没个一两天是说不明白的.</p>
<h1 id="找出适合你的id"><a href="#找出适合你的id" class="headerlink" title="找出适合你的id"></a>找出适合你的id</h1><table>
<thead>
<tr>
<th>有效节点</th>
<th>10进制</th>
<th>设备名称</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x14</td>
<td>20</td>
<td>Speaker out</td>
<td><strong>20-&gt;2</strong></td>
</tr>
<tr>
<td>0x21</td>
<td>33</td>
<td>HP out</td>
<td><strong>33-&gt;3</strong></td>
</tr>
<tr>
<td>0x19</td>
<td>25</td>
<td>Headset Mic in</td>
<td><strong>8-&gt;35-&gt;25</strong> <strong>9-&gt;34-&gt;25</strong></td>
</tr>
<tr>
<td>0x1a</td>
<td>26</td>
<td>Headphone Mic in</td>
<td><strong>8-&gt;35-&gt;26</strong> <strong>9-&gt;34-&gt;26</strong></td>
</tr>
<tr>
<td>0x12</td>
<td>18</td>
<td>Internal Mic in</td>
<td><strong>8-&gt;35-&gt;18</strong></td>
</tr>
</tbody>
</table>
<h1 id="编译AppleALC"><a href="#编译AppleALC" class="headerlink" title="编译AppleALC"></a>编译AppleALC</h1><p>使用xcode<br>通过lilu联合编译</p>
<h1 id="注入id"><a href="#注入id" class="headerlink" title="注入id"></a>注入id</h1><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h1 id="其它问题"><a href="#其它问题" class="headerlink" title="其它问题"></a>其它问题</h1><p>耳机切换<br>睡眠唤醒<br>去除底噪</p>
<h2 id="声卡驱动了-音量调节的图标也显示正常-就是不发声怎么办"><a href="#声卡驱动了-音量调节的图标也显示正常-就是不发声怎么办" class="headerlink" title="声卡驱动了,音量调节的图标也显示正常,就是不发声怎么办"></a>声卡驱动了,音量调节的图标也显示正常,就是不发声怎么办</h2><p>如果您的声卡使用了AppleALC,也注入了正确的ID后不发声怎么办呢?这个问题就出现在有效节点和路径不正确上面.<br>所谓条条大路通罗马,我们总不能在同一棵树上吊死吧.现在可以请出<a href="https://github.com/daliansky/VoodooHDA-2.9.0-Clover-V10" target="_blank" rel="external">VoodooHDA</a>万能声卡驱动程序了,说它万能是不正确的,如果它万能了估计就没<code>AppleALC</code>啥事儿了吧.这里可以借助<code>VoodooHDA</code>自带的应用程序:<a href="https://github.com/daliansky/VoodooHDA-2.9.0-Clover-V10/raw/master/getdump" target="_blank" rel="external">getdump</a>,使用方法:打开终端,输入命令:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo cp ~/Downloads/getdump /usr/<span class="built_in">local</span>/bin  <span class="comment"># 将getdump命令复制到/usr/local/bin目录下</span></div><div class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/getdump    <span class="comment"># 为getdump添加执行权限</span></div><div class="line">getdump &gt; ~/Desktop/voodoo_dump.txt</div></pre></td></tr></table></figure>
<p>用它可以生成一份<code>voodoo_dump.txt</code>的文件,里面会有两段以<code>DUMPING Playback/Record Paths</code>开头的文字描述,这里面即包括了有效节点,同时也包括了有效的路径<br><img src="http://ous2s14vo.bkt.clouddn.com/path1.png" alt="path1"><br><img src="http://ous2s14vo.bkt.clouddn.com/path2.png" alt="path2"><br>从上面的两张截图中,可以将有效的节点和路径整理出下面的表格:</p>
<table>
<thead>
<tr>
<th>有效节点</th>
<th>10进制</th>
<th>设备名称</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x14</td>
<td>20</td>
<td>Speaker out</td>
<td><strong>20-&gt;12-&gt;2</strong></td>
</tr>
<tr>
<td>0x21</td>
<td>33</td>
<td>HP out</td>
<td><strong>33-&gt;13-&gt;3</strong></td>
</tr>
<tr>
<td>0x19</td>
<td>25</td>
<td>Headset Mic in</td>
<td><strong>8-&gt;35-&gt;24</strong> <strong>8-&gt;35-&gt;29备用</strong></td>
</tr>
<tr>
<td>0x12</td>
<td>18</td>
<td>Internal Mic in</td>
<td><strong>9-&gt;34-&gt;18</strong> <strong>9-&gt;34-&gt;29备用</strong></td>
</tr>
</tbody>
</table>
<p>有了这个表格,再结合<code>configdata</code>,找出有效的ID,编译<code>AppleALC</code>,注入ID并使用声卡驱动.</p>
<h1 id="HDA工具下载及使用"><a href="#HDA工具下载及使用" class="headerlink" title="HDA工具下载及使用"></a>HDA工具下载及使用</h1><p>制作声卡仿冒需要用到的工具,我已经同步到仓库,您可以打包下载也可以通过git同步到本地</p>
<ul>
<li>下载链接:<a href="https://github.com/daliansky/dell7000/tree/master/hda-tools" target="_blank" rel="external">https://github.com/daliansky/dell7000/tree/master/hda-tools</a></li>
<li><p>如何安装</p>
<ul>
<li><p>将<code>hda-tools</code>目录下的所有文件复制到<code>/usr/local/bin</code>下,如果<code>/usr/local/bin</code>目录不存在,需要新建立,命令如下:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /usr/<span class="built_in">local</span>/bin   <span class="comment"># 建立/usr/local/bin子目录</span></div><div class="line">sudo cp ~/Downloads/hda-tools/* /usr/<span class="built_in">local</span>/bin  <span class="comment"># 将hda-tools目录下所有的应用程序复制到/usr/local/bin目录下</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>如何使用</p>
<ul>
<li><p>打开终端,输入命令,直接执行.例如:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">verbit.sh codec<span class="comment">#0 &gt; codec_dump.txt    # 有效节点格式化</span></div><div class="line">codecgraph codec<span class="comment">#0    # 自动生成pathmap图,文件位于codec#0相同目录下</span></div><div class="line">hda-verb 0x19 0x707 0x20    <span class="comment"># 耳机睡眠唤醒无声修正</span></div><div class="line">widget_dump.sh  <span class="comment"># 读取SET_PIN_WIDGET_CONTROL数值</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h1 id="关于打赏"><a href="#关于打赏" class="headerlink" title="关于打赏"></a>关于打赏</h1><p>您的支持就是我更新的动力！<br>如果不希望看到博主停更的话，请点击下方的 <code>打赏</code> 支持一下，有钱的捧个钱场，没钱的捧个人场，谢谢大家！</p>
<h1 id="QQ群"><a href="#QQ群" class="headerlink" title="QQ群:"></a>QQ群:</h1><p>331686786 <a href="http://shang.qq.com/wpa/qunwpa?idkey=db511a29e856f37cbb871108ffa77a6e79dde47e491b8f2c8d8fe4d3c310de91" target="_blank" rel="external">一起黑苹果</a></p>
]]></content:encoded>
      
      <comments>http://blog.daliansky.net/Use-AppleALC-sound-card-to-drive-the-correct-posture-of-AppleHDA.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用CloverALC给AppleHDA打补丁，适用于台式机</title>
      <link>http://blog.daliansky.net/Clover-Patched-Desktop-AppleHDA-Realtek-ALC-Audio.html</link>
      <guid>http://blog.daliansky.net/Clover-Patched-Desktop-AppleHDA-Realtek-ALC-Audio.html</guid>
      <pubDate>Tue, 07 Nov 2017 13:35:16 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;教程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://ous2s14vo.bkt.clouddn.com/sound.jpg&quot; alt=&quot;sound&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用-CloverALC-给-AppleHDA-打补丁，-适用于台式机
      
      </description>
      
      <content:encoded><![CDATA[<ul>
<li>教程</li>
</ul>
<p><img src="http://ous2s14vo.bkt.clouddn.com/sound.jpg" alt="sound"></p>
<h1 id="使用-CloverALC-给-AppleHDA-打补丁，-适用于台式机"><a href="#使用-CloverALC-给-AppleHDA-打补丁，-适用于台式机" class="headerlink" title="使用 CloverALC 给 AppleHDA 打补丁， 适用于台式机"></a><strong>使用 <code>CloverALC</code> 给 <code>AppleHDA</code> 打补丁， 适用于台式机</strong></h1><blockquote>
<p><em>原生支持 <code>AppleHDA</code></em></p>
</blockquote>
<p>使用 <code>Clover</code> 为Realtek ALC芯片打补丁，这种方法可以启用macOS <code>AppleHDA</code> 板载音频，无论是否带有HDMI和DP音频。 该脚本添加了编解码器特定的布局和平台文件，并将二进制补丁和引脚配置数据注入到本地安装的 <code>AppleHDA.kext</code> 。</p>
<p><strong>版本: audio_cloverALC-1x0</strong></p>
<ol>
<li>简单: <code>.command</code>命令, 请看 <code>C.安装</code></li>
<li>Bash: <code>.sh命令</code>, 请看 <code>D. 终端</code></li>
</ol>
<p><strong>更新列表</strong></p>
<ul>
<li>9-26-17<ul>
<li>支持10.13, 支持ALC269/ALC283</li>
<li>支持PikeralphaALC弃用的</li>
</ul>
</li>
<li>12-14-15<ul>
<li>audio_pikeralpha-110 (Clover版本的Piker Aplha AppleHDA8Series.sh)</li>
</ul>
</li>
<li>11-8-15<ul>
<li>Skylake/100系统更新，加入ALC1150/Audio ID: 3</li>
</ul>
</li>
<li>7-19-15<ul>
<li>ALC283更新 </li>
</ul>
</li>
<li>6-15-15<ul>
<li>10.11 - El Capitan Realtek ALC AppleHDA.kext 初始支持</li>
</ul>
</li>
</ul>
<p><strong>A. 需求</strong></p>
<ol>
<li>macOS/Clover_v2696及以后版本<ol>
<li>10.13/High Sierra, 关闭 SIP, 挂载 EFI</li>
<li>10.12/Sierra, 关闭 SIP, 挂载 EFI</li>
<li>10.11/El Capitan, 设置 boot flag: <code>rootless=0</code> </li>
<li>10.10/Yosemite, 设置 boot flag: <code>kext-dev-mode=1</code></li>
<li>10.9/Mavericks</li>
<li>10.8/Mountain Lionon</li>
</ol>
</li>
<li>原生的、未修改的 <code>AppleHDA.kext</code><ol>
<li><a href="https://github.com/toleda/audio_ALC_guides/blob/master/Restore%20native%20AppleHDA%20%5BGuide%5D.pdf" target="_blank" rel="external">Need native?</a></li>
</ol>
</li>
<li>支持Realtek板载的音频编解码器<ol>
<li><a href="https://github.com/toleda/audio_ALC_guides/blob/master/Identify%20Audio%20Codec%20%5BGuide%5D.pdf" target="_blank" rel="external">Unknown codec?</a></li>
</ol>
</li>
</ol>
<p><strong>B. Realtek ALCxxx</strong> (验证过的编解码器和音频ID)</p>
<ol>
<li><p>支持的编解码器 (* 不支持 audio_pikeralpha-110)</p>
<ol>
<li>885</li>
<li>887</li>
<li>888</li>
<li>889</li>
<li>892</li>
<li>898</li>
<li>1150</li>
<li>1220</li>
</ol>
</li>
<li><p>支持的音频ID</p>
<ul>
<li><p>音频ID: <strong>1</strong> </p>
<ul>
<li>支持 885, 887, 888, 889, 892, 898, 1150, 1220</li>
<li>Realtek ALC audio (默认, 1/2/3/5/6 主板音频端口)</li>
</ul>
</li>
<li><p>音频ID: <strong>2</strong></p>
<ul>
<li>支持 887, 888, 889, 892, 898, 1150, 1220</li>
<li>Realtek ALC/5.1声道 (3主板音频端口，2进/1出变成3出)</li>
</ul>
</li>
<li><p>音频ID: <strong>3</strong></p>
<ul>
<li>支持 887, 888, 889, 892, 898, 1150</li>
<li>带有Realtek ALC音频的HD3000 / HD4000 HDMI音频</li>
</ul>
</li>
</ul>
</li>
</ol>
<p><strong>C. 安装</strong></p>
<ol>
<li>通过 <code>Clover</code> 为 <code>AppleHDA</code> 打补丁<ol>
<li><a href="https://github.com/toleda/audio_CloverALC" target="_blank" rel="external">下载</a> <code>audio_cloverALC-1x0.command</code></li>
<li>双击: <code>audio_cloverALC-1x0.command</code></li>
<li>Password:</li>
<li>Confirm Codec ALCxxx: (885, 887, 888, 889, 892, 898, 1150, 1220 only)</li>
<li>Clover/Legacy: answer y to Confirm Clover Legacy Install (y/n)</li>
<li>Clover Audio ID Injection (y/n):</li>
<li>Use Audio ID: x (y/n):</li>
<li>Optional: Terminal/Terminal Saved Output</li>
</ol>
</li>
<li>重启电脑</li>
<li>验证ALC板载音频<ol>
<li>系统偏好设置/声音/输出/选择音频设备</li>
</ol>
</li>
</ol>
<p><strong>D. 终端</strong></p>
<ol>
<li><p>通过 <code>Clover</code> 为 <code>AppleHDA</code> 打补丁</p>
<ol>
<li><a href="https://github.com/toleda/audio_CloverALC" target="_blank" rel="external">下载</a>   <code>audio_cloverALC-1x0.sh</code></li>
<li><p>打开终端</p>
 <figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./audio_cloverALC-1x0....sh</div></pre></td></tr></table></figure>
</li>
<li><p>其它步骤同 <code>C.</code></p>
</li>
</ol>
</li>
</ol>
<p><strong>E. 更多的信息</strong></p>
<ol>
<li><a href="https://github.com/toleda/audio_RealtekALC/blob/master/DETAILS.md" target="_blank" rel="external">Details</a><ol>
<li>Onboard Audio Solutions</li>
<li>Requirements - Supported/Unsupported</li>
<li>Notes</li>
<li>Guides</li>
<li>Tools</li>
<li>Problem Reporting</li>
</ol>
</li>
<li>Terminal Saved Output<ol>
<li><a href="https://github.com/toleda/audio_CloverALC/blob/master/Terminal%20Saved%20Output_v1.0.4-efi.txt" target="_blank" rel="external">Clover/EFI</a></li>
<li><a href="https://github.com/toleda/audio_CloverALC/blob/master/Terminal%20Saved%20Output_v1.0.4-leg.txt" target="_blank" rel="external">Clover/Legacy</a></li>
</ol>
</li>
</ol>
<p><strong>Credit</strong><br>THe KiNG, bcc9, RevoGirl, PikeRAlpha, SJ_UnderWater, RehabMan, TimeWalker75a, lisai9093, <a href="http://applelife.ru/threads/patchim-applehda-s-pomoschju-zagruzchika.39406/#post-353647" target="_blank" rel="external">abxite</a></p>
<p>toleda <a href="https://github.com/toleda/audio_cloverALC" target="_blank" rel="external">https://github.com/toleda/audio_cloverALC</a></p>
<h1 id="关于打赏"><a href="#关于打赏" class="headerlink" title="关于打赏"></a>关于打赏</h1><p>您的支持就是我更新的动力！<br>如果不希望看到博主停更的话，请点击下方的 <code>打赏</code> 支持一下，有钱的捧个钱场，没钱的捧个人场，谢谢大家！</p>
<h1 id="QQ群"><a href="#QQ群" class="headerlink" title="QQ群:"></a>QQ群:</h1><p>331686786 <a href="http://shang.qq.com/wpa/qunwpa?idkey=db511a29e856f37cbb871108ffa77a6e79dde47e491b8f2c8d8fe4d3c310de91" target="_blank" rel="external">一起黑苹果</a></p>
]]></content:encoded>
      
      <comments>http://blog.daliansky.net/Clover-Patched-Desktop-AppleHDA-Realtek-ALC-Audio.html#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
